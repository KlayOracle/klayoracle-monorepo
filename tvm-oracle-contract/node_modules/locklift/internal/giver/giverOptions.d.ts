import { Giver } from "../factory";
import { Address, Contract, ProviderRpcClient, Transaction } from "everscale-inpage-provider";
import { Ed25519KeyPair } from "everscale-standalone-client";
export declare class GiverFromAccount implements Giver {
    private readonly ever;
    private readonly account;
    constructor(ever: ProviderRpcClient, account: Address);
    sendTo(sendTo: Address, value: string): Promise<{
        transaction: Transaction;
        output?: Record<string, unknown>;
    }>;
}
export declare class TestnetGiver implements Giver {
    readonly keyPair: Ed25519KeyPair;
    giverContract: Contract<typeof testnetGiverAbi>;
    constructor(ever: ProviderRpcClient, keyPair: Ed25519KeyPair, address: Address);
    sendTo(sendTo: Address, value: string): Promise<{
        transaction: Transaction;
        output?: Record<string, unknown>;
    }>;
}
declare const testnetGiverAbi: {
    readonly "ABI version": 2;
    readonly header: readonly ["pubkey", "time", "expire"];
    readonly functions: readonly [{
        readonly name: "sendGrams";
        readonly inputs: readonly [{
            readonly name: "dest";
            readonly type: "address";
        }, {
            readonly name: "amount";
            readonly type: "uint64";
        }];
        readonly outputs: readonly [];
    }];
    readonly events: readonly [];
};
export {};
