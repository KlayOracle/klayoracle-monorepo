import { AccountData, Addressable, AllowedCodes, MsgTree, RevertedBranch } from "./types";
import { Address } from "everscale-inpage-provider";
import BigNumber from "bignumber.js";
export declare const fetchMsgData: (msgId: string, endpoint: string) => Promise<MsgTree>;
export declare const fetchAccounts: (accounts: Array<Address>, endpoint: string) => Promise<Array<AccountData>>;
export declare const convert: (number: number, decimals?: number, precision?: number) => string | null;
export declare const convertForLogger: (amount: number) => BigNumber;
export declare const hexToValue: (amount: number) => BigNumber;
export declare const throwErrorInConsole: <Abi>(revertedBranch: RevertedBranch<Abi>[]) => void;
export declare const isT: <T>(p: T) => p is NonNullable<T>;
export declare const getDefaultAllowedCodes: () => Omit<Required<AllowedCodes>, "contracts">;
export declare const isExistsInArr: <T>(srcArr: T[], isExist: T) => boolean;
export declare const extractStringAddress: (contract: Addressable) => string;
export declare const extractAddress: (contract: Addressable) => Address;
